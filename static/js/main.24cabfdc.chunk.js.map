{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","isDisplay","setIsDisplay","onClick","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.24cabfdc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [isDisplay, setIsDisplay] = useState(false);\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const startHandler = () => {\n    setIsDisplay(true);\n  };\n\n  const cancelHandler = () => {\n    setIsDisplay(false);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,// (Unary plus operator, convert it to number if it's not already one.)\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    setIsDisplay(false);\n  };\n\n  if (isDisplay === false) {\n    return <button onClick={startHandler}>Add New Expense</button>;\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className='new-expense'>\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  // let expensesContent = <p>No Expenses found.</p>;\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses found</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  // if (props.items.length > 0) {\r\n\r\n  //   ));\r\n  // }\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value); // Returns a brand new array of all the datapoints within the datapoints array\r\n    const totalMaximum = Math.max(...dataPointsValues); // Pull out all the values in the array and add them as arguments to max method\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => jan = 0;\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  // Filter returns a brand new array\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses = {filteredExpenses}/>\n        <ExpensesList items = {filteredExpenses}/>;\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Hello!\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}